syntax = "proto3";

option java_package = "io.openmarket.event.grpc";
option java_outer_classname = "EventProto";

package event;

service StampEvent {
  rpc createEvent (CreateEventRequest) returns (CreateEventResult) {}
  rpc deleteEvent (DeleteEventRequest) returns (DeleteEventResult) {}
  rpc redeem (RedeemRequest) returns (RedeemResult) {}
  rpc getEvent (GetEventRequest) returns (GetEventResult) {}
  rpc getOwnedEvent (GetOwnedEventRequest) returns (GetOwnedEventResult) {}
}

message CreateEventRequest {
  string name = 1;
  string currency = 2;
  string expiresAt = 3;
  double rewardAmount = 4;
  double totalAmount = 5;
}

message CreateEventResult {
  Error error = 1;
  string eventId = 2;
}

message DeleteEventRequest {
  string eventId = 1;
}

message DeleteEventResult {
    Error error = 1;
}

message RedeemRequest {
  string eventId = 1;
}

message RedeemResult {
  Error error = 1;
  string message = 2;
  string transactionId = 3;
  Event event = 4;
}

message GetEventRequest {
  string eventId = 1;
}

message GetEventResult {
  Error error = 1;
  Event event = 2;
}

message GetOwnedEventRequest {
  string exclusiveStartKey = 1;
  uint32 count = 2;
}

message GetOwnedEventResult {
  Error error = 1;
  string lastEvaluatedKey = 2;
  repeated Event events = 3;
}

message Event {
  string eventId = 1;
  string owner = 2;
  string name = 3;
  OwnerType type = 4;
  string currency = 5;
  string expiresAt = 6;
  string createdAt = 7;
  double rewardAmount = 8;
  double totalAmount = 9;
  double remainingAmount = 10;
  string successMessage = 11;
  string errorMessage = 12;
}

enum Error {
  NOTHING = 0;
  UNAUTHORIZED = 1;
  INVALID_EVENT_ID = 2;
  ALREADY_REDEEMED = 3;
  OUT_OF_COINS = 4;
  UNKNOWN = 5;
}

enum OwnerType {
  USER = 0;
  ORGANIZATION = 1;
}
