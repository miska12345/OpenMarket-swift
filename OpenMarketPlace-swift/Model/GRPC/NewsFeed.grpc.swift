//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: NewsFeed.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Dispatch
import Foundation
import SwiftGRPC
import SwiftProtobuf

internal protocol Newsfeed_NewsFeedgetTopDealsCall: ClientCallUnary {}

fileprivate final class Newsfeed_NewsFeedgetTopDealsCallBase: ClientCallUnaryBase<Newsfeed_TopDealsRequest, Newsfeed_TopDealsResult>, Newsfeed_NewsFeedgetTopDealsCall {
  override class var method: String { return "/newsfeed.NewsFeed/getTopDeals" }
}

internal protocol Newsfeed_NewsFeedgetPostersCall: ClientCallUnary {}

fileprivate final class Newsfeed_NewsFeedgetPostersCallBase: ClientCallUnaryBase<Newsfeed_GetPosterRequest, Newsfeed_GetPosterResult>, Newsfeed_NewsFeedgetPostersCall {
  override class var method: String { return "/newsfeed.NewsFeed/getPosters" }
}

internal protocol Newsfeed_NewsFeedgetRecommendItemsCall: ClientCallUnary {}

fileprivate final class Newsfeed_NewsFeedgetRecommendItemsCallBase: ClientCallUnaryBase<Newsfeed_RecommendItemRequest, Newsfeed_RecommendItemResult>, Newsfeed_NewsFeedgetRecommendItemsCall {
  override class var method: String { return "/newsfeed.NewsFeed/getRecommendItems" }
}

internal protocol Newsfeed_NewsFeedgetRecommendedEventsCall: ClientCallUnary {}

fileprivate final class Newsfeed_NewsFeedgetRecommendedEventsCallBase: ClientCallUnaryBase<Newsfeed_RecommendEventsRequest, Newsfeed_RecommendEventsResult>, Newsfeed_NewsFeedgetRecommendedEventsCall {
  override class var method: String { return "/newsfeed.NewsFeed/getRecommendedEvents" }
}

internal protocol Newsfeed_NewsFeedgetRecommendedOrganizationCall: ClientCallUnary {}

fileprivate final class Newsfeed_NewsFeedgetRecommendedOrganizationCallBase: ClientCallUnaryBase<Newsfeed_RecommendOrganizationRequest, Newsfeed_RecommendOrganizationResult>, Newsfeed_NewsFeedgetRecommendedOrganizationCall {
  override class var method: String { return "/newsfeed.NewsFeed/getRecommendedOrganization" }
}


/// Instantiate Newsfeed_NewsFeedServiceClient, then call methods of this protocol to make API calls.
internal protocol Newsfeed_NewsFeedService: ServiceClient {
  /// Synchronous. Unary.
  func getTopDeals(_ request: Newsfeed_TopDealsRequest, metadata customMetadata: Metadata) throws -> Newsfeed_TopDealsResult
  /// Asynchronous. Unary.
  @discardableResult
  func getTopDeals(_ request: Newsfeed_TopDealsRequest, metadata customMetadata: Metadata, completion: @escaping (Newsfeed_TopDealsResult?, CallResult) -> Void) throws -> Newsfeed_NewsFeedgetTopDealsCall

  /// Synchronous. Unary.
  func getPosters(_ request: Newsfeed_GetPosterRequest, metadata customMetadata: Metadata) throws -> Newsfeed_GetPosterResult
  /// Asynchronous. Unary.
  @discardableResult
  func getPosters(_ request: Newsfeed_GetPosterRequest, metadata customMetadata: Metadata, completion: @escaping (Newsfeed_GetPosterResult?, CallResult) -> Void) throws -> Newsfeed_NewsFeedgetPostersCall

  /// Synchronous. Unary.
  func getRecommendItems(_ request: Newsfeed_RecommendItemRequest, metadata customMetadata: Metadata) throws -> Newsfeed_RecommendItemResult
  /// Asynchronous. Unary.
  @discardableResult
  func getRecommendItems(_ request: Newsfeed_RecommendItemRequest, metadata customMetadata: Metadata, completion: @escaping (Newsfeed_RecommendItemResult?, CallResult) -> Void) throws -> Newsfeed_NewsFeedgetRecommendItemsCall

  /// Synchronous. Unary.
  func getRecommendedEvents(_ request: Newsfeed_RecommendEventsRequest, metadata customMetadata: Metadata) throws -> Newsfeed_RecommendEventsResult
  /// Asynchronous. Unary.
  @discardableResult
  func getRecommendedEvents(_ request: Newsfeed_RecommendEventsRequest, metadata customMetadata: Metadata, completion: @escaping (Newsfeed_RecommendEventsResult?, CallResult) -> Void) throws -> Newsfeed_NewsFeedgetRecommendedEventsCall

  /// Synchronous. Unary.
  func getRecommendedOrganization(_ request: Newsfeed_RecommendOrganizationRequest, metadata customMetadata: Metadata) throws -> Newsfeed_RecommendOrganizationResult
  /// Asynchronous. Unary.
  @discardableResult
  func getRecommendedOrganization(_ request: Newsfeed_RecommendOrganizationRequest, metadata customMetadata: Metadata, completion: @escaping (Newsfeed_RecommendOrganizationResult?, CallResult) -> Void) throws -> Newsfeed_NewsFeedgetRecommendedOrganizationCall

}

internal extension Newsfeed_NewsFeedService {
  /// Synchronous. Unary.
  func getTopDeals(_ request: Newsfeed_TopDealsRequest) throws -> Newsfeed_TopDealsResult {
    return try self.getTopDeals(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func getTopDeals(_ request: Newsfeed_TopDealsRequest, completion: @escaping (Newsfeed_TopDealsResult?, CallResult) -> Void) throws -> Newsfeed_NewsFeedgetTopDealsCall {
    return try self.getTopDeals(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func getPosters(_ request: Newsfeed_GetPosterRequest) throws -> Newsfeed_GetPosterResult {
    return try self.getPosters(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func getPosters(_ request: Newsfeed_GetPosterRequest, completion: @escaping (Newsfeed_GetPosterResult?, CallResult) -> Void) throws -> Newsfeed_NewsFeedgetPostersCall {
    return try self.getPosters(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func getRecommendItems(_ request: Newsfeed_RecommendItemRequest) throws -> Newsfeed_RecommendItemResult {
    return try self.getRecommendItems(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func getRecommendItems(_ request: Newsfeed_RecommendItemRequest, completion: @escaping (Newsfeed_RecommendItemResult?, CallResult) -> Void) throws -> Newsfeed_NewsFeedgetRecommendItemsCall {
    return try self.getRecommendItems(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func getRecommendedEvents(_ request: Newsfeed_RecommendEventsRequest) throws -> Newsfeed_RecommendEventsResult {
    return try self.getRecommendedEvents(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func getRecommendedEvents(_ request: Newsfeed_RecommendEventsRequest, completion: @escaping (Newsfeed_RecommendEventsResult?, CallResult) -> Void) throws -> Newsfeed_NewsFeedgetRecommendedEventsCall {
    return try self.getRecommendedEvents(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func getRecommendedOrganization(_ request: Newsfeed_RecommendOrganizationRequest) throws -> Newsfeed_RecommendOrganizationResult {
    return try self.getRecommendedOrganization(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func getRecommendedOrganization(_ request: Newsfeed_RecommendOrganizationRequest, completion: @escaping (Newsfeed_RecommendOrganizationResult?, CallResult) -> Void) throws -> Newsfeed_NewsFeedgetRecommendedOrganizationCall {
    return try self.getRecommendedOrganization(request, metadata: self.metadata, completion: completion)
  }

}

internal final class Newsfeed_NewsFeedServiceClient: ServiceClientBase, Newsfeed_NewsFeedService {
  /// Synchronous. Unary.
  internal func getTopDeals(_ request: Newsfeed_TopDealsRequest, metadata customMetadata: Metadata) throws -> Newsfeed_TopDealsResult {
    return try Newsfeed_NewsFeedgetTopDealsCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func getTopDeals(_ request: Newsfeed_TopDealsRequest, metadata customMetadata: Metadata, completion: @escaping (Newsfeed_TopDealsResult?, CallResult) -> Void) throws -> Newsfeed_NewsFeedgetTopDealsCall {
    return try Newsfeed_NewsFeedgetTopDealsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func getPosters(_ request: Newsfeed_GetPosterRequest, metadata customMetadata: Metadata) throws -> Newsfeed_GetPosterResult {
    return try Newsfeed_NewsFeedgetPostersCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func getPosters(_ request: Newsfeed_GetPosterRequest, metadata customMetadata: Metadata, completion: @escaping (Newsfeed_GetPosterResult?, CallResult) -> Void) throws -> Newsfeed_NewsFeedgetPostersCall {
    return try Newsfeed_NewsFeedgetPostersCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func getRecommendItems(_ request: Newsfeed_RecommendItemRequest, metadata customMetadata: Metadata) throws -> Newsfeed_RecommendItemResult {
    return try Newsfeed_NewsFeedgetRecommendItemsCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func getRecommendItems(_ request: Newsfeed_RecommendItemRequest, metadata customMetadata: Metadata, completion: @escaping (Newsfeed_RecommendItemResult?, CallResult) -> Void) throws -> Newsfeed_NewsFeedgetRecommendItemsCall {
    return try Newsfeed_NewsFeedgetRecommendItemsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func getRecommendedEvents(_ request: Newsfeed_RecommendEventsRequest, metadata customMetadata: Metadata) throws -> Newsfeed_RecommendEventsResult {
    return try Newsfeed_NewsFeedgetRecommendedEventsCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func getRecommendedEvents(_ request: Newsfeed_RecommendEventsRequest, metadata customMetadata: Metadata, completion: @escaping (Newsfeed_RecommendEventsResult?, CallResult) -> Void) throws -> Newsfeed_NewsFeedgetRecommendedEventsCall {
    return try Newsfeed_NewsFeedgetRecommendedEventsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func getRecommendedOrganization(_ request: Newsfeed_RecommendOrganizationRequest, metadata customMetadata: Metadata) throws -> Newsfeed_RecommendOrganizationResult {
    return try Newsfeed_NewsFeedgetRecommendedOrganizationCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func getRecommendedOrganization(_ request: Newsfeed_RecommendOrganizationRequest, metadata customMetadata: Metadata, completion: @escaping (Newsfeed_RecommendOrganizationResult?, CallResult) -> Void) throws -> Newsfeed_NewsFeedgetRecommendedOrganizationCall {
    return try Newsfeed_NewsFeedgetRecommendedOrganizationCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}

