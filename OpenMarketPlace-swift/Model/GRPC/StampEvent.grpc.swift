//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: StampEvent.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Dispatch
import Foundation
import SwiftGRPC
import SwiftProtobuf

internal protocol Event_StampEventcreateEventCall: ClientCallUnary {}

fileprivate final class Event_StampEventcreateEventCallBase: ClientCallUnaryBase<Event_CreateEventRequest, Event_CreateEventResult>, Event_StampEventcreateEventCall {
  override class var method: String { return "/event.StampEvent/createEvent" }
}

internal protocol Event_StampEventdeleteEventCall: ClientCallUnary {}

fileprivate final class Event_StampEventdeleteEventCallBase: ClientCallUnaryBase<Event_DeleteEventRequest, Event_DeleteEventResult>, Event_StampEventdeleteEventCall {
  override class var method: String { return "/event.StampEvent/deleteEvent" }
}

internal protocol Event_StampEventredeemCall: ClientCallUnary {}

fileprivate final class Event_StampEventredeemCallBase: ClientCallUnaryBase<Event_RedeemRequest, Event_RedeemResult>, Event_StampEventredeemCall {
  override class var method: String { return "/event.StampEvent/redeem" }
}

internal protocol Event_StampEventgetEventCall: ClientCallUnary {}

fileprivate final class Event_StampEventgetEventCallBase: ClientCallUnaryBase<Event_GetEventRequest, Event_GetEventResult>, Event_StampEventgetEventCall {
  override class var method: String { return "/event.StampEvent/getEvent" }
}

internal protocol Event_StampEventgetOwnedEventCall: ClientCallUnary {}

fileprivate final class Event_StampEventgetOwnedEventCallBase: ClientCallUnaryBase<Event_GetOwnedEventRequest, Event_GetOwnedEventResult>, Event_StampEventgetOwnedEventCall {
  override class var method: String { return "/event.StampEvent/getOwnedEvent" }
}


/// Instantiate Event_StampEventServiceClient, then call methods of this protocol to make API calls.
internal protocol Event_StampEventService: ServiceClient {
  /// Synchronous. Unary.
  func createEvent(_ request: Event_CreateEventRequest, metadata customMetadata: Metadata) throws -> Event_CreateEventResult
  /// Asynchronous. Unary.
  @discardableResult
  func createEvent(_ request: Event_CreateEventRequest, metadata customMetadata: Metadata, completion: @escaping (Event_CreateEventResult?, CallResult) -> Void) throws -> Event_StampEventcreateEventCall

  /// Synchronous. Unary.
  func deleteEvent(_ request: Event_DeleteEventRequest, metadata customMetadata: Metadata) throws -> Event_DeleteEventResult
  /// Asynchronous. Unary.
  @discardableResult
  func deleteEvent(_ request: Event_DeleteEventRequest, metadata customMetadata: Metadata, completion: @escaping (Event_DeleteEventResult?, CallResult) -> Void) throws -> Event_StampEventdeleteEventCall

  /// Synchronous. Unary.
  func redeem(_ request: Event_RedeemRequest, metadata customMetadata: Metadata) throws -> Event_RedeemResult
  /// Asynchronous. Unary.
  @discardableResult
  func redeem(_ request: Event_RedeemRequest, metadata customMetadata: Metadata, completion: @escaping (Event_RedeemResult?, CallResult) -> Void) throws -> Event_StampEventredeemCall

  /// Synchronous. Unary.
  func getEvent(_ request: Event_GetEventRequest, metadata customMetadata: Metadata) throws -> Event_GetEventResult
  /// Asynchronous. Unary.
  @discardableResult
  func getEvent(_ request: Event_GetEventRequest, metadata customMetadata: Metadata, completion: @escaping (Event_GetEventResult?, CallResult) -> Void) throws -> Event_StampEventgetEventCall

  /// Synchronous. Unary.
  func getOwnedEvent(_ request: Event_GetOwnedEventRequest, metadata customMetadata: Metadata) throws -> Event_GetOwnedEventResult
  /// Asynchronous. Unary.
  @discardableResult
  func getOwnedEvent(_ request: Event_GetOwnedEventRequest, metadata customMetadata: Metadata, completion: @escaping (Event_GetOwnedEventResult?, CallResult) -> Void) throws -> Event_StampEventgetOwnedEventCall

}

internal extension Event_StampEventService {
  /// Synchronous. Unary.
  func createEvent(_ request: Event_CreateEventRequest) throws -> Event_CreateEventResult {
    return try self.createEvent(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func createEvent(_ request: Event_CreateEventRequest, completion: @escaping (Event_CreateEventResult?, CallResult) -> Void) throws -> Event_StampEventcreateEventCall {
    return try self.createEvent(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func deleteEvent(_ request: Event_DeleteEventRequest) throws -> Event_DeleteEventResult {
    return try self.deleteEvent(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func deleteEvent(_ request: Event_DeleteEventRequest, completion: @escaping (Event_DeleteEventResult?, CallResult) -> Void) throws -> Event_StampEventdeleteEventCall {
    return try self.deleteEvent(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func redeem(_ request: Event_RedeemRequest) throws -> Event_RedeemResult {
    return try self.redeem(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func redeem(_ request: Event_RedeemRequest, completion: @escaping (Event_RedeemResult?, CallResult) -> Void) throws -> Event_StampEventredeemCall {
    return try self.redeem(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func getEvent(_ request: Event_GetEventRequest) throws -> Event_GetEventResult {
    return try self.getEvent(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func getEvent(_ request: Event_GetEventRequest, completion: @escaping (Event_GetEventResult?, CallResult) -> Void) throws -> Event_StampEventgetEventCall {
    return try self.getEvent(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func getOwnedEvent(_ request: Event_GetOwnedEventRequest) throws -> Event_GetOwnedEventResult {
    return try self.getOwnedEvent(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func getOwnedEvent(_ request: Event_GetOwnedEventRequest, completion: @escaping (Event_GetOwnedEventResult?, CallResult) -> Void) throws -> Event_StampEventgetOwnedEventCall {
    return try self.getOwnedEvent(request, metadata: self.metadata, completion: completion)
  }

}

internal final class Event_StampEventServiceClient: ServiceClientBase, Event_StampEventService {
  /// Synchronous. Unary.
  internal func createEvent(_ request: Event_CreateEventRequest, metadata customMetadata: Metadata) throws -> Event_CreateEventResult {
    return try Event_StampEventcreateEventCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func createEvent(_ request: Event_CreateEventRequest, metadata customMetadata: Metadata, completion: @escaping (Event_CreateEventResult?, CallResult) -> Void) throws -> Event_StampEventcreateEventCall {
    return try Event_StampEventcreateEventCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func deleteEvent(_ request: Event_DeleteEventRequest, metadata customMetadata: Metadata) throws -> Event_DeleteEventResult {
    return try Event_StampEventdeleteEventCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func deleteEvent(_ request: Event_DeleteEventRequest, metadata customMetadata: Metadata, completion: @escaping (Event_DeleteEventResult?, CallResult) -> Void) throws -> Event_StampEventdeleteEventCall {
    return try Event_StampEventdeleteEventCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func redeem(_ request: Event_RedeemRequest, metadata customMetadata: Metadata) throws -> Event_RedeemResult {
    return try Event_StampEventredeemCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func redeem(_ request: Event_RedeemRequest, metadata customMetadata: Metadata, completion: @escaping (Event_RedeemResult?, CallResult) -> Void) throws -> Event_StampEventredeemCall {
    return try Event_StampEventredeemCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func getEvent(_ request: Event_GetEventRequest, metadata customMetadata: Metadata) throws -> Event_GetEventResult {
    return try Event_StampEventgetEventCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func getEvent(_ request: Event_GetEventRequest, metadata customMetadata: Metadata, completion: @escaping (Event_GetEventResult?, CallResult) -> Void) throws -> Event_StampEventgetEventCall {
    return try Event_StampEventgetEventCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func getOwnedEvent(_ request: Event_GetOwnedEventRequest, metadata customMetadata: Metadata) throws -> Event_GetOwnedEventResult {
    return try Event_StampEventgetOwnedEventCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func getOwnedEvent(_ request: Event_GetOwnedEventRequest, metadata customMetadata: Metadata, completion: @escaping (Event_GetOwnedEventResult?, CallResult) -> Void) throws -> Event_StampEventgetOwnedEventCall {
    return try Event_StampEventgetOwnedEventCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}

